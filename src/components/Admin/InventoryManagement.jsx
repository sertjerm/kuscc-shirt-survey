// ===================================================================
// File: src/components/Admin/InventoryManagement.jsx
// Description: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏à‡πá‡∏Ñ‡πÄ‡∏Å‡πá‡∏ï - ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å
// Updated: ‡∏ï‡∏±‡∏î column "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" ‡∏≠‡∏≠‡∏Å + ‡πÄ‡∏û‡∏¥‡πà‡∏° Highlight ‡πÅ‡∏ñ‡∏ß 2 ‡πÅ‡∏ö‡∏ö
// ===================================================================

import React, { useState, useEffect } from "react";
import {
  Card,
  Table,
  Button,
  Modal,
  Form,
  InputNumber,
  Select,
  Input,
  Space,
  Typography,
  message,
  Tag,
  Alert,
  Spin,
  Row,
  Col,
  Grid,
  Descriptions,
  Popover,
} from "antd";
import {
  PlusOutlined,
  MinusOutlined,
  ReloadOutlined,
  WarningOutlined,
  CheckCircleOutlined,
  CloseOutlined,
  ExclamationCircleOutlined,
} from "@ant-design/icons";
import { getInventorySummary, adjustInventory } from "../../services/shirtApi";
import { useAppContext } from "../../App";

const { Title, Text } = Typography;
const { Option } = Select;
const { TextArea } = Input;

// ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
const ALL_SIZES = [
  "XS",
  "S",
  "M",
  "L",
  "XL",
  "2XL",
  "3XL",
  "4XL",
  "5XL",
  "6XL",
];

const InventoryManagement = () => {
  const { user } = useAppContext();
  const [form] = Form.useForm();
  const screens = Grid.useBreakpoint();

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const [inventory, setInventory] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [modalVisible, setModalVisible] = useState(false);
  const [submitting, setSubmitting] = useState(false);
  const isMobile = !screens?.md;

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡∏≠‡∏ô component mount
  useEffect(() => {
    loadInventory();
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏à‡∏≤‡∏Å API
  const loadInventory = async () => {
    setLoading(true);
    setError(null);
    try {
      const data = await getInventorySummary();
      console.log("üì• Inventory Data:", data);
      setInventory(data || []);
    } catch (err) {
      console.error("Error loading inventory:", err);
      setError(err.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏î‡πâ");
    } finally {
      setLoading(false);
    }
  };

  // ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ï‡∏¥‡∏°/‡πÄ‡∏ö‡∏¥‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å
  const handleOpenModal = () => {
    setModalVisible(true);
    form.resetFields();
  };

  // ‡∏õ‡∏¥‡∏î Modal
  const handleCloseModal = () => {
    setModalVisible(false);
    form.resetFields();
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°/‡πÄ‡∏ö‡∏¥‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å
  const handleSubmitAdjustment = async (actionType) => {
    try {
      const values = await form.validateFields();
      setSubmitting(true);

      const adjustmentData = {
        sizeCode: values.sizeCode,
        quantity: values.quantity,
        type: actionType,
        remarks: values.remarks || "",
        processedBy: user.memberCode,
      };

      await adjustInventory(adjustmentData);

      message.success(
        actionType === "ADD"
          ? `‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î ${values.sizeCode} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${values.quantity} ‡∏ï‡∏±‡∏ß ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`
          : `‡πÄ‡∏ö‡∏¥‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î ${values.sizeCode} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${values.quantity} ‡∏ï‡∏±‡∏ß ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`
      );

      handleCloseModal();
      loadInventory();
    } catch (error) {
      if (error.errorFields) return;
      message.error(error.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å");
    } finally {
      setSubmitting(false);
    }
  };

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const totals = inventory.reduce(
    (acc, item) => ({
      produced: acc.produced + (item.produced || 0),
      reserved: acc.reserved + (item.reserved || 0),
      received: acc.received + (item.received || 0),
      distributed: acc.distributed + (item.distributed || 0),
      remaining: acc.remaining + (item.remaining || 0),
    }),
    { produced: 0, reserved: 0, received: 0, distributed: 0, remaining: 0 }
  );

  // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ (‚â§ 50)
  const lowStockCount = inventory.filter((item) => item.isLowStock).length;

  // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å
  const overReservedCount = inventory.filter(
    (item) => item.reserved > item.produced
  ).length;

  // ===================================================================
  // ‚úÖ COLUMNS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á (Desktop View) - ‡∏ï‡∏±‡∏î "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
  // ===================================================================
  const columns = [
    {
      title: "‡∏Ç‡∏ô‡∏≤‡∏î",
      dataIndex: "sizeCode",
      key: "sizeCode",
      align: "center",
      render: (size) => (
        <Text strong style={{ fontSize: 14, color: "#000" }}>
          {size}
        </Text>
      ),
    },
    {
      title: "‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠ (I)",
      dataIndex: "produced",
      key: "produced",
      align: "right",
      responsive: ["md"],
      render: (value) => (
        <Text strong style={{ color: "#1890ff" }}>
          {Number(value).toLocaleString()}
        </Text>
      ),
    },
    {
      title: "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á",
      dataIndex: "reserved",
      key: "reserved",
      align: "right",
      responsive: ["md"],
      render: (value, record) => {
        const isOverReserved = value > record.produced;
        const shortage = value - record.produced;

        // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô ‡πÅ‡∏™‡∏î‡∏á Popover ‡∏û‡∏£‡πâ‡∏≠‡∏° icon ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏™‡∏µ‡∏™‡πâ‡∏°/warning)
        if (isOverReserved) {
          const popoverContent = (
            <div style={{ maxWidth: 280 }}>
              <Text strong style={{ color: "#faad14", fontSize: 15 }}>
                ‚ö†Ô∏è ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å!
              </Text>
              <div style={{ marginTop: 8, fontSize: 14 }}>
                <Text>‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠: {record.produced.toLocaleString()} ‡∏ï‡∏±‡∏ß</Text>
                <br />
                <Text>‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á: {value.toLocaleString()} ‡∏Ñ‡∏ô</Text>
                <br />
                <Text strong style={{ color: "#faad14" }}>
                  ‡∏Ç‡∏≤‡∏î: {shortage.toLocaleString()} ‡∏ï‡∏±‡∏ß
                </Text>
              </div>
              <div
                style={{
                  marginTop: 12,
                  padding: "8px 12px",
                  backgroundColor: "#fff7e6",
                  borderRadius: 6,
                  borderLeft: "3px solid #faad14",
                }}
              >
                <Text type="secondary" style={{ fontSize: 13 }}>
                  üí° <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î
                </Text>
              </div>
            </div>
          );

          return (
            <Popover
              content={popoverContent}
              title={null}
              trigger="hover"
              placement="top"
            >
              <Space>
                <ExclamationCircleOutlined
                  style={{
                    color: "#faad14",
                    fontSize: 18,
                    animation: "pulse 1.5s infinite",
                  }}
                />
                <Text strong style={{ color: "#faad14" }}>
                  {Number(value).toLocaleString()}
                </Text>
              </Space>
            </Popover>
          );
        }

        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß)
        return (
          <Text style={{ color: "#52c41a" }}>
            {Number(value).toLocaleString()}
          </Text>
        );
      },
    },
    {
      title: "‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß",
      dataIndex: "received",
      key: "received",
      align: "right",
      render: (value) => (
        <Text style={{ color: "#faad14" }}>
          {Number(value).toLocaleString()}
        </Text>
      ),
    },
    {
      title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (2)",
      dataIndex: "distributed",
      key: "distributed",
      align: "right",
      responsive: ["md"],
      render: (value) => (
        <Text style={{ color: "#ff4d4f" }}>
          {Number(value).toLocaleString()}
        </Text>
      ),
    },
    {
      title: "‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠",
      dataIndex: "remaining",
      key: "remaining",
      align: "right",
      render: (value, record) => {
        const isLowStock = record.isLowStock;
        return (
          <Space>
            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á icon ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ */}
            {isLowStock && <WarningOutlined style={{ color: "#ff4d4f" }} />}
            <Text
              strong
              style={{
                color: isLowStock ? "#ff4d4f" : value === 0 ? "#999" : "#000",
                fontSize: 16,
              }}
            >
              {Number(value).toLocaleString()}
            </Text>
          </Space>
        );
      },
    },
    // ‚ùå ‡∏ï‡∏±‡∏î column "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
  ];

  // ‡πÅ‡∏™‡∏î‡∏á Loading
  if (loading) {
    return (
      <Card>
        <div style={{ textAlign: "center", padding: "40px 0" }}>
          <Spin size="large" />
          <div style={{ marginTop: 16 }}>
            <Text type="secondary">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å...</Text>
          </div>
        </div>
      </Card>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á Error
  if (error) {
    return (
      <Alert
        message="‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"
        description={error}
        type="error"
        showIcon
        action={<Button onClick={loadInventory}>‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</Button>}
      />
    );
  }

  return (
    <Space direction="vertical" size="large" style={{ width: "100%" }}>
      {/* ===================================================================
          ‚úÖ Alert Box: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô (‡∏™‡∏µ‡∏™‡πâ‡∏°/warning)
          =================================================================== */}
      {overReservedCount > 0 && (
        <Alert
          message="‚ö†Ô∏è ‡∏û‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å"
          description={`‡∏°‡∏µ ${overReservedCount} ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°`}
          type="warning"
          showIcon
          icon={<ExclamationCircleOutlined />}
          style={{ marginBottom: 16 }}
        />
      )}

      {/* ===================================================================
          ‚úÖ Alert Box: ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ (‡∏™‡∏µ‡πÅ‡∏î‡∏á/error)
          =================================================================== */}
      {lowStockCount > 0 && (
        <Alert
          message="üö® ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå!"
          description={`‡∏û‡∏ö‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå ${lowStockCount} ‡∏Ç‡∏ô‡∏≤‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏î‡πà‡∏ß‡∏ô!`}
          type="error"
          showIcon
          icon={<WarningOutlined />}
        />
      )}

      {/* ===================================================================
          CARD ‡∏´‡∏•‡∏±‡∏Å: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ï‡πá‡∏≠‡∏Å
          =================================================================== */}
      <Card
        title={
          <Space>
            <Title level={4} style={{ margin: 0 }}>
              ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏à‡πá‡∏Ñ‡πÄ‡∏Å‡πá‡∏ï
            </Title>
          </Space>
        }
        extra={
          <Space wrap>
            <Button
              type="primary"
              size="large"
              onClick={() => handleOpenModal()}
              style={{
                backgroundColor: "#1890ff",
                borderColor: "#1890ff",
                borderRadius: 8,
                fontWeight: 600,
              }}
            >
              ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å
            </Button>
            <Button
              size="large"
              icon={<ReloadOutlined />}
              onClick={loadInventory}
              style={{
                borderRadius: 8,
              }}
            >
              ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
            </Button>
          </Space>
        }
      >
        {/* ===================================================================
            ‚úÖ MOBILE VIEW: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î ‡∏û‡∏£‡πâ‡∏≠‡∏° border ‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
            =================================================================== */}
        {isMobile ? (
          <Row gutter={[12, 12]}>
            {inventory.map((item) => {
              const isOverReserved = item.reserved > item.produced;
              const shortage = item.reserved - item.produced;

              return (
                <Col xs={24} sm={12} key={item.sizeCode}>
                  <Card
                    size="small"
                    style={{
                      borderRadius: 12,
                      boxShadow: "0 6px 18px rgba(15,15,15,0.06)",
                      // ‚úÖ Priority: ‡∏´‡∏°‡∏î > ‡∏ï‡πà‡∏≥ > ‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô
                      borderLeft:
                        item.remaining === 0
                          ? "4px solid #ff4d4f" // ‡πÅ‡∏î‡∏á = ‡∏´‡∏°‡∏î
                          : item.isLowStock
                          ? "4px solid #faad14" // ‡∏™‡πâ‡∏° = ‡∏ï‡πà‡∏≥
                          : isOverReserved
                          ? "4px solid #faad14" // ‡∏™‡πâ‡∏° = ‡∏à‡∏≠‡∏á‡πÄ‡∏Å‡∏¥‡∏ô
                          : undefined,
                    }}
                    bodyStyle={{ padding: 12 }}
                  >
                    <Descriptions
                      size="small"
                      column={1}
                      bordered
                      labelStyle={{ width: 110, fontWeight: 700 }}
                      contentStyle={{ paddingLeft: 8 }}
                    >
                      <Descriptions.Item label="‡∏Ç‡∏ô‡∏≤‡∏î">
                        <Tag color="blue" style={{ fontWeight: 700 }}>
                          {item.sizeCode}
                        </Tag>
                      </Descriptions.Item>
                      <Descriptions.Item label="‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠">
                        {Number(item.produced).toLocaleString()}
                      </Descriptions.Item>
                      <Descriptions.Item label="‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≠‡∏á">
                        {isOverReserved ? (
                          <Space>
                            <ExclamationCircleOutlined
                              style={{ color: "#faad14" }}
                            />
                            <Text strong style={{ color: "#faad14" }}>
                              {Number(item.reserved).toLocaleString()}
                            </Text>
                            <Text type="secondary" style={{ fontSize: 12 }}>
                              (‡∏Ç‡∏≤‡∏î {shortage})
                            </Text>
                          </Space>
                        ) : (
                          Number(item.reserved).toLocaleString()
                        )}
                      </Descriptions.Item>
                      <Descriptions.Item label="‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß">
                        {Number(item.received).toLocaleString()}
                      </Descriptions.Item>
                      <Descriptions.Item label="‡πÄ‡∏ö‡∏¥‡∏Å‡∏†‡∏≤‡∏¢‡πÉ‡∏ô">
                        {Number(item.distributed).toLocaleString()}
                      </Descriptions.Item>
                      <Descriptions.Item label="‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠">
                        <span
                          style={{
                            fontWeight: 800,
                            color: item.isLowStock ? "#ff4d4f" : "#000",
                          }}
                        >
                          {Number(item.remaining).toLocaleString()}
                        </span>
                      </Descriptions.Item>
                      {/* ‚ùå ‡∏ï‡∏±‡∏î "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞" ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Mobile View ‡πÅ‡∏•‡πâ‡∏ß */}
                    </Descriptions>
                  </Card>
                </Col>
              );
            })}
          </Row>
        ) : (
          /* ===================================================================
             ‚úÖ DESKTOP VIEW: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏° Highlight ‡πÅ‡∏ñ‡∏ß 2 ‡πÅ‡∏ö‡∏ö
             =================================================================== */
          <Table
            dataSource={inventory}
            columns={columns}
            rowKey="sizeCode"
            pagination={false}
            bordered
            scroll={{ x: "max-content" }}
            // ‚úÖ Highlight ‡πÅ‡∏ñ‡∏ß‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:
            // 1. ‡∏´‡∏°‡∏î (remaining === 0) = ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô
            // 2. ‡∏ï‡πà‡∏≥ (isLowStock) = ‡∏™‡∏µ‡∏™‡πâ‡∏°‡∏≠‡πà‡∏≠‡∏ô
            rowClassName={(record) => {
              if (record.remaining === 0) return "out-of-stock-row";
              if (record.isLowStock) return "low-stock-row";
              return "";
            }}
            summary={() => (
              <Table.Summary.Row>
                <Table.Summary.Cell index={0}>
                  <b>‡∏£‡∏ß‡∏°</b>
                </Table.Summary.Cell>
                <Table.Summary.Cell index={1} align="right">
                  {totals.produced.toLocaleString()}
                </Table.Summary.Cell>
                <Table.Summary.Cell index={2} align="right">
                  {totals.reserved.toLocaleString()}
                </Table.Summary.Cell>
                <Table.Summary.Cell index={3} align="right">
                  {totals.received.toLocaleString()}
                </Table.Summary.Cell>
                <Table.Summary.Cell index={4} align="right">
                  {totals.distributed.toLocaleString()}
                </Table.Summary.Cell>
                <Table.Summary.Cell index={5} align="right">
                  {totals.remaining.toLocaleString()}
                </Table.Summary.Cell>
                {/* ‚ùå ‡∏ï‡∏±‡∏î index={6} ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏õ‡πá‡∏ô column ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞) */}
              </Table.Summary.Row>
            )}
          />
        )}
      </Card>

      {/* ===================================================================
          MODAL: ‡πÄ‡∏ï‡∏¥‡∏°/‡πÄ‡∏ö‡∏¥‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å
          =================================================================== */}
      <Modal
        open={modalVisible}
        onCancel={handleCloseModal}
        footer={null}
        width={560}
        closeIcon={<CloseOutlined style={{ fontSize: 20, color: "#999" }} />}
        style={{ top: 60 }}
        styles={{
          header: {
            textAlign: "center",
            borderBottom: "none",
            paddingBottom: 0,
          },
          body: { paddingTop: 16 },
        }}
      >
        {/* Header */}
        <div style={{ textAlign: "center", marginBottom: 24 }}>
          <Title level={3} style={{ margin: 0, fontWeight: 700 }}>
            ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ï‡πá‡∏≠‡∏Å
          </Title>
        </div>

        {/* Form */}
        <Form form={form} layout="vertical">
          <Form.Item
            name="sizeCode"
            label={
              <Text strong style={{ fontSize: 15 }}>
                ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î
              </Text>
            }
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠" }]}
          >
            <Select
              placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î"
              size="large"
              style={{ fontSize: 16 }}
              suffixIcon={
                <span style={{ fontSize: 20, color: "#999" }}>‚ñº</span>
              }
            >
              {ALL_SIZES.map((size) => (
                <Option key={size} value={size}>
                  {size}
                </Option>
              ))}
            </Select>
          </Form.Item>

          <Form.Item
            name="quantity"
            label={
              <Text strong style={{ fontSize: 15 }}>
                ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
              </Text>
            }
            rules={[
              { required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô" },
              { type: "number", min: 1, message: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0" },
            ]}
          >
            <InputNumber
              min={1}
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
              size="large"
              style={{ width: "100%", fontSize: 16 }}
            />
          </Form.Item>

          <Form.Item
            label={
              <Text strong style={{ fontSize: 15 }}>
                ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
              </Text>
            }
          >
            <Input
              value={user?.memberCode || "ADMIN"}
              disabled
              size="large"
              style={{
                fontSize: 16,
                backgroundColor: "#f5f5f5",
                color: "#666",
              }}
            />
          </Form.Item>

          <Form.Item
            name="remarks"
            label={
              <Text strong style={{ fontSize: 15 }}>
                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
              </Text>
            }
          >
            <TextArea
              rows={3}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏ö‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡πÅ‡∏ó‡∏ô, ‡∏Ç‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∏‡∏î"
              style={{ fontSize: 14 }}
              maxLength={200}
              showCount
            />
          </Form.Item>

          {/* Buttons */}
          <Row gutter={16} style={{ marginTop: 32 }}>
            <Col span={12}>
              <Button
                block
                size="large"
                loading={submitting}
                onClick={() => handleSubmitAdjustment("ADD")}
                icon={<PlusOutlined />}
                style={{
                  height: 52,
                  fontSize: 16,
                  fontWeight: 600,
                  borderRadius: 8,
                  backgroundColor: "#52c41a",
                  borderColor: "#52c41a",
                  color: "white",
                }}
              >
                ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å
              </Button>
            </Col>
            <Col span={12}>
              <Button
                block
                size="large"
                loading={submitting}
                onClick={() => handleSubmitAdjustment("REMOVE")}
                icon={<MinusOutlined />}
                style={{
                  height: 52,
                  fontSize: 16,
                  fontWeight: 600,
                  borderRadius: 8,
                  backgroundColor: "#faad14",
                  borderColor: "#faad14",
                  color: "white",
                }}
              >
                ‡πÄ‡∏ö‡∏¥‡∏Å‡∏™‡∏ï‡πá‡∏≠‡∏Å
              </Button>
            </Col>
          </Row>
        </Form>
      </Modal>

      {/* ===================================================================
          ‚úÖ CSS: Highlight ‡πÅ‡∏ñ‡∏ß 2 ‡πÅ‡∏ö‡∏ö + Animation
          =================================================================== */}
      <style jsx>{`
        /* Animation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö icon ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */
        @keyframes pulse {
          0%,
          100% {
            transform: scale(1);
            opacity: 1;
          }
          50% {
            transform: scale(1.1);
            opacity: 0.8;
          }
        }

        /* ‚úÖ ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ï‡πà‡∏≥ (isLowStock) = ‡∏™‡∏µ‡∏™‡πâ‡∏°‡∏≠‡πà‡∏≠‡∏ô (warning) */
        .low-stock-row {
          background-color: #fff7e6 !important;
        }

        .low-stock-row:hover {
          background-color: #ffe7ba !important;
        }

        /* ‚úÖ ‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏´‡∏°‡∏î (remaining === 0) = ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô (error) */
        .out-of-stock-row {
          background-color: #fff2f0 !important;
        }

        .out-of-stock-row:hover {
          background-color: #ffe7e6 !important;
        }
      `}</style>
    </Space>
  );
};

export default InventoryManagement;