// src/components/Admin/PickupModal.jsx - ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î stock
import React, { useState, useEffect } from "react";
import { Modal, Button, Radio, Row, Col, Card, message, Spin, Alert } from "antd";
import { CloseOutlined, WarningOutlined } from "@ant-design/icons";
import { 
  submitPickup, 
  saveMemberSize, 
  getInventorySummary 
} from "../../services/shirtApi";
import { useAppContext } from "../../App";
import "../../styles/PickupModal.css";

const ALL_SIZES = [
  "XS",
  "S",
  "M",
  "L",
  "XL",
  "2XL",
  "3XL",
  "4XL",
  "5XL",
  "6XL",
];

const SIZE_INFO = {
  XS: { chest: '40"', length: '24"' },
  S: { chest: '42"', length: '25"' },
  M: { chest: '44"', length: '26"' },
  L: { chest: '46"', length: '27"' },
  XL: { chest: '48"', length: '28"' },
  "2XL": { chest: '50"', length: '29"' },
  "3XL": { chest: '52"', length: '30"' },
  "4XL": { chest: '54"', length: '31"' },
  "5XL": { chest: '56"', length: '32"' },
  "6XL": { chest: '58"', length: '33"' },
};

const PickupModal = ({ visible, onCancel, selectedMember, onSuccess }) => {
  const { user } = useAppContext();
  const [loading, setLoading] = useState(false);
  const [loadingStock, setLoadingStock] = useState(false);
  const [selectedSize, setSelectedSize] = useState(null);
  const [receiverType, setReceiverType] = useState("SELF");
  const [receiverMemberCode, setReceiverMemberCode] = useState("");
  const [receiverFullName, setReceiverFullName] = useState("");
  const [showSizeGuide, setShowSizeGuide] = useState(false);
  const [memberData, setMemberData] = useState(null);
  const [stockData, setStockData] = useState({});

  useEffect(() => {
    if (visible && selectedMember) {
      console.log("Modal opened with member:", selectedMember);
      console.log("Current admin user:", user);

      setMemberData({
        memberCode: selectedMember.memberCode || selectedMember.MEMB_CODE,
        fullName: selectedMember.fullName || selectedMember.FULLNAME || "",
        sizeCode: selectedMember.sizeCode || selectedMember.SIZE_CODE || null,
        rawData: selectedMember,
      });

      setSelectedSize(
        selectedMember.sizeCode || selectedMember.SIZE_CODE || null
      );
      setReceiverType("SELF");
      setReceiverMemberCode("");
      setReceiverFullName("");
      
      loadStockData();
    } else if (!visible) {
      setMemberData(null);
      setSelectedSize(null);
      setReceiverType("SELF");
      setReceiverMemberCode("");
      setReceiverFullName("");
      setLoading(false);
      setStockData({});
    }
  }, [visible, selectedMember, user]);

  const loadStockData = async () => {
    setLoadingStock(true);
    try {
      const inventory = await getInventorySummary();
      const stockMap = {};
      inventory.forEach(item => {
        stockMap[item.sizeCode] = {
          remaining: item.remaining || 0,
          produced: item.produced || 0,
          reserved: item.reserved || 0,
        };
      });
      setStockData(stockMap);
      console.log("üì¶ Stock data loaded:", stockMap);
    } catch (error) {
      console.error("Error loading stock:", error);
      message.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏î‡πâ");
    } finally {
      setLoadingStock(false);
    }
  };

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ size ‡∏°‡∏µ stock ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const canReceiveSize = (size) => {
    if (!stockData[size]) return false;
    return stockData[size].remaining > 0;
  };

  const getAdminCode = () => {
    console.log("Getting admin code from user:", user);

    if (!user) {
      console.warn("‚ö†Ô∏è No user found, using default ADMIN");
      message.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login ‡πÉ‡∏´‡∏°‡πà");
      return "ADMIN";
    }

    const adminCode = user.memberCode || user.MEMB_CODE || user.mbcode;

    if (!adminCode) {
      console.warn("‚ö†Ô∏è No memberCode found in user object:", user);
      message.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£");
      return "ADMIN";
    }

    const paddedCode = String(adminCode).padStart(6, "0");
    console.log("‚úÖ Using admin code:", paddedCode);

    return paddedCode;
  };

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î - ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏°‡πâ stock ‡∏´‡∏°‡∏î (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≠‡∏á)
  const handleSaveSizeOnly = async () => {
    if (!memberData || !memberData.memberCode) {
      message.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å");
      return;
    }

    if (!selectedSize) {
      message.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠");
      return;
    }

    // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡πâ‡∏≤ stock ‡∏´‡∏°‡∏î ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ
    if (!canReceiveSize(selectedSize)) {
      message.warning(`‡∏Ç‡∏ô‡∏≤‡∏î ${selectedSize} ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ`);
    }

    setLoading(true);
    try {
      const adminCode = getAdminCode();

      console.log("=== Saving size only ===");
      console.log("Member Code:", memberData.memberCode);
      console.log("Size Code:", selectedSize);
      console.log("Admin Code (PROCESSED_BY):", adminCode);

      await saveMemberSize({
        memberCode: memberData.memberCode,
        sizeCode: selectedSize,
        remarks: `‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏î‡∏¢ ${adminCode}`,
        surveyMethod: "MANUAL",
        processedBy: adminCode,
      });

      message.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

      onCancel();

      setTimeout(() => {
        if (onSuccess) {
          onSuccess();
        }
      }, 300);
    } catch (error) {
      console.error("‚ùå Save size error:", error);
      message.error(error.message || "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } finally {
      setLoading(false);
    }
  };

  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠ - ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ stock ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  const handleSubmitPickup = async () => {
    if (!memberData || !memberData.memberCode) {
      message.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å");
      return;
    }

    if (!selectedSize) {
      message.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠");
      return;
    }

    // ‚úÖ ‡∏´‡πâ‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ñ‡πâ‡∏≤ stock ‡∏´‡∏°‡∏î
    if (!canReceiveSize(selectedSize)) {
      message.error(`‡∏Ç‡∏ô‡∏≤‡∏î ${selectedSize} ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ`);
      return;
    }

    if (receiverType === "OTHER") {
      if (!receiverMemberCode || receiverMemberCode.length !== 6) {
        message.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô 6 ‡∏´‡∏•‡∏±‡∏Å");
        return;
      }
      if (!receiverFullName || receiverFullName.trim() === "") {
        message.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô");
        return;
      }
    }

    setLoading(true);
    try {
      const adminCode = getAdminCode();

      console.log("=== Submitting pickup ===");
      console.log("Member Code:", memberData.memberCode);
      console.log("Size Code:", selectedSize);
      console.log("Admin Code (PROCESSED_BY):", adminCode);
      console.log("Receiver Type:", receiverType);
      console.log("Receiver Member Code:", receiverMemberCode);
      console.log("Receiver Full Name:", receiverFullName);

      await submitPickup({
        memberCode: memberData.memberCode,
        sizeCode: selectedSize,
        processedBy: adminCode,
        receiverType: receiverType,
        receiverMemberCode:
          receiverType === "OTHER" ? receiverMemberCode : null,
        receiverName: receiverType === "OTHER" ? receiverFullName : null,
        remarks: `‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ ${adminCode}`,
      });

      message.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

      onCancel();

      setTimeout(() => {
        if (onSuccess) {
          onSuccess();
        }
      }, 300);
    } catch (error) {
      console.error("‚ùå Pickup submit error:", error);
      message.error(error.message || "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } finally {
      setLoading(false);
    }
  };

  if (!memberData) {
    return null;
  }

  return (
    <>
      <Modal
        open={visible}
        onCancel={onCancel}
        footer={null}
        width={500}
        closeIcon={<CloseOutlined />}
        className="pickup-modal-minimal"
        destroyOnClose={true}
        maskClosable={false}
        getContainer={false}
      >
        <div className="pickup-modal-content">
          <h2 className="modal-title">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠</h2>

          <div className="member-info-grid">
            <div className="info-item">
              <span className="info-label">‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</span>
              <span className="info-value">{memberData.memberCode}</span>
            </div>
            <div className="info-item">
              <span className="info-label">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</span>
              <span className="info-value">{memberData.fullName || "-"}</span>
            </div>
          </div>

          <div className="section">
            <div className="section-header">
              <span className="section-label">‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</span>
              <Button
                type="link"
                size="small"
                onClick={() => setShowSizeGuide(true)}
                loading={loadingStock}
              >
                ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡∏ô‡∏≤‡∏î
              </Button>
            </div>

            {loadingStock ? (
              <div style={{ textAlign: "center", padding: "20px" }}>
                <Spin tip="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å..." />
              </div>
            ) : selectedSize ? (
              <div className="selected-size-display">
                <span style={{ 
                  color: !canReceiveSize(selectedSize) ? "#ff4d4f" : "#000",
                  fontWeight: "bold"
                }}>
                  {selectedSize}
                </span>
                {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å */}
                {stockData[selectedSize] && !canReceiveSize(selectedSize) && (
                  <div style={{ 
                    fontSize: 12, 
                    color: "#ff4d4f", 
                    marginTop: 4,
                    fontWeight: "bold"
                  }}>
                    ‚ö†Ô∏è ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å (‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)
                  </div>
                )}
              </div>
            ) : (
              <div className="no-size-warning">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î</div>
            )}
          </div>

          <div className="section">
            <span className="section-label">‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠</span>
            <Radio.Group
              value={receiverType}
              onChange={(e) => {
                setReceiverType(e.target.value);
                if (e.target.value === "SELF") {
                  setReceiverMemberCode("");
                  setReceiverFullName("");
                }
              }}
              className="receiver-radio-group"
            >
              <Radio value="SELF" disabled={!selectedSize || !canReceiveSize(selectedSize)}>
                ‡∏£‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á
              </Radio>
              <Radio value="OTHER" disabled={!selectedSize || !canReceiveSize(selectedSize)}>
                ‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô
              </Radio>
            </Radio.Group>

            {receiverType === "OTHER" && (
              <div className="receiver-other-fields">
                <div className="input-group">
                  <label>‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô (6 ‡∏´‡∏•‡∏±‡∏Å)</label>
                  <input
                    type="text"
                    maxLength={6}
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å 6 ‡∏´‡∏•‡∏±‡∏Å"
                    value={receiverMemberCode}
                    onChange={(e) => {
                      const value = e.target.value.replace(/\D/g, "");
                      setReceiverMemberCode(value);
                    }}
                    className="receiver-input"
                  />
                </div>
                <div className="input-group">
                  <label>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏ô</label>
                  <input
                    type="text"
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"
                    value={receiverFullName}
                    onChange={(e) => setReceiverFullName(e.target.value)}
                    className="receiver-input"
                  />
                </div>
              </div>
            )}
          </div>

          <div className="modal-footer">
            <Button onClick={onCancel} size="large" disabled={loading}>
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </Button>

            {/* ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î - ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠ */}
            <Button
              size="large"
              onClick={handleSaveSizeOnly}
              loading={loading}
              disabled={!selectedSize || loading}
            >
              ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î
            </Button>

            {/* ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠ - ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ stock */}
            <Button
              type="primary"
              size="large"
              onClick={handleSubmitPickup}
              loading={loading}
              disabled={!selectedSize || !canReceiveSize(selectedSize) || loading}
            >
              ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏∑‡πâ‡∏≠
            </Button>
          </div>
        </div>
      </Modal>

      {/* Size Guide Modal */}
      <Modal
        open={showSizeGuide}
        onCancel={() => setShowSizeGuide(false)}
        footer={null}
        width={900}
        closeIcon={<CloseOutlined />}
        className="size-guide-modal"
        destroyOnClose={true}
        getContainer={false}
      >
        <div className="size-guide-content">
          <h2 className="modal-title">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà</h2>

          <div style={{ marginBottom: 16, fontSize: 14, color: "#666" }}>
            <a
              href="https://apps2.coop.ku.ac.th/asset/images/png/sizewidth.png"
              target="_blank"
              rel="noopener noreferrer"
            >
              ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏±‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠
            </a>
          </div>

          {loadingStock ? (
            <div style={{ textAlign: "center", padding: "40px" }}>
              <Spin size="large" tip="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å..." />
            </div>
          ) : (
            <>
              <div className="size-grid">
                {ALL_SIZES.map((size) => {
                  const hasStock = canReceiveSize(size);
                  const stock = stockData[size];
                  
                  return (
                    <Card
                      key={size}
                      hoverable
                      className={`size-card ${selectedSize === size ? "selected" : ""}`}
                      onClick={() => {
                        setSelectedSize(size);
                        setShowSizeGuide(false);
                        if (!hasStock) {
                          message.warning(`‡∏Ç‡∏ô‡∏≤‡∏î ${size} ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å - ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ`);
                        }
                      }}
                    >
                      <div className="size-label" style={{ fontSize: 28 }}>
                        {size}
                        {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å */}
                        {!hasStock && (
                          <div style={{ 
                            fontSize: 12, 
                            color: "#ff4d4f", 
                            marginTop: 6,
                            fontWeight: "bold" 
                          }}>
                            ‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å
                          </div>
                        )}
                      </div>
                      <div className="size-measurements">
                        <div style={{ fontSize: 16 }}>‡∏≠‡∏Å {SIZE_INFO[size].chest}</div>
                        <div style={{ fontSize: 16 }}>‡∏¢‡∏≤‡∏ß {SIZE_INFO[size].length}</div>
                      </div>
                    </Card>
                  );
                })}
              </div>

              <div className="size-guide-note">
                <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ß‡∏±‡∏î‡∏£‡∏≠‡∏ö‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
                2" ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏à‡πá‡∏Ñ‡πÄ‡∏Å‡πá‡∏ï‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏±‡∏î‡πÑ‡∏î‡πâ 40"
                ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏™‡∏∑‡πâ‡∏≠ 42" ‡πÅ‡∏ó‡∏ô
                <div style={{ marginTop: 8, color: "#ff4d4f" }}>
                  <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å
                </div>
              </div>
            </>
          )}
        </div>
      </Modal>
    </>
  );
};

export default PickupModal;